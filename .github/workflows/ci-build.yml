on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
    types: [opened, reopened, synchronize]
  workflow_call:
  workflow_dispatch:

name: ci-build

env:
  REGISTRY: ghcr.io

jobs:

  build:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Find latest tag
        uses: oprypin/find-latest-tag@v1
        id: latest-tag
        with:
          repository: ${{ github.repository }}
          regex: '^[0-9]+.[0-9]+.[0-9]+$'
          releases-only: false
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/bitnami-redis
          flavor: |
            latest=false
          tags: |
            type=raw,value={{branch}},enable=${{ github.ref_type == 'branch' && github.event_name != 'pull_request' }}
            type=raw,value=latest,enable=${{ steps.latest-tag.outputs.tag == github.ref_name }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64